USE QLNHATRO_PH33506
GO
/*1. Thêm thông tin vào các bảng*/
-- SP thứ nhất thực hiện chèn dữ liệu vào bảng NGUOIDUNG
CREATE PROC SP_THEM_NGUOIDUNG
@ID_NGUOIDUNG NCHAR(10),
@TEN_NGUOIDUNG NVARCHAR(255),
@GIOITINH NVARCHAR(4),
@DIENTHOAI NVARCHAR(11),
@DIACHI NVARCHAR(255),
@QUAN NVARCHAR(50),
@EMAIL NVARCHAR(100)
AS BEGIN
	IF(@ID_NGUOIDUNG IS NULL OR @TEN_NGUOIDUNG IS NULL OR @GIOITINH IS NULL OR @DIENTHOAI IS NULL OR @DIACHI IS NULL OR @QUAN IS NULL OR @EMAIL IS NULL)
	BEGIN
		RAISERROR('VUI LONG NHAP DU THONG TIN', 16, 16)
	END
	ELSE
	BEGIN
		INSERT INTO NGUOIDUNG VALUES (@ID_NGUOIDUNG, @TEN_NGUOIDUNG, @GIOITINH, @DIENTHOAI, @DIACHI, @QUAN, @EMAIL);
		PRINT 'THEM THANH CONG'
	END
END
SELECT * FROM NGUOIDUNG
EXEC SP_THEM_NGUOIDUNG  101,'LE THI S', 'NU', '0912345678', 'SO 10, DUONG TRAN DUY HUNG, QUAN CAU GIAY', 'CAU GIAY', 'S@GMAIL.COM'

-- SP thứ hai thực hiện chèn dữ liệu vào bảng NHATRO
CREATE PROC SP_THEM_NHATRO
@ID_NHATRO NCHAR(10),
@ID_LOAINHA NCHAR(10),
@DIENTICH FLOAT,
@GIAPHONG FLOAT,
@DIACHI NVARCHAR(255),
@QUAN NVARCHAR(50),
@MOTA NVARCHAR(MAX),
@NGAY_DANGTIN DATE ,
@ID_NGUOIDUNG NCHAR(10)
AS BEGIN
	IF(@ID_NHATRO IS NULL OR @ID_LOAINHA IS NULL OR @DIENTICH IS NULL OR @GIAPHONG IS NULL OR @DIACHI IS NULL OR @QUAN IS NULL OR @MOTA IS NULL OR @NGAY_DANGTIN IS NULL OR @ID_NGUOIDUNG IS NULL)
	BEGIN
		RAISERROR('VUI LONG NHAP DU THONG TIN', 16, 16)
	END
	ELSE
	BEGIN
		INSERT INTO NHATRO VALUES(@ID_NHATRO, @ID_LOAINHA, @DIENTICH, @GIAPHONG, @DIACHI, @QUAN, @MOTA, @NGAY_DANGTIN, @ID_NGUOIDUNG)
		PRINT 'THEM THANH CONG'
	END
END
SELECT * FROM NHATRO
EXEC SP_THEM_NHATRO '2023', '2', 30, 90000000, 'SO 130, DUONG TRAN PHU, QUAN BA DINH', 'BA DINH', 'PHONG TRO CO GAC, GAN BENH VIEN, TRUONG DAI HOC', '2023-01-25', '101' 

--SP thứ ba thực hiện chèn dữ liệu vào bảng DANHGIA
CREATE PROC SP_THEM_DANHGIA
@ID_DANHGIA NCHAR(10),
@ID_NGUOIDUNG NCHAR(10),
@ID_NHATRO NCHAR(10),
@LIKE_DISLIKE BIT,
@ND_DANHGIA NVARCHAR(MAX)
AS BEGIN
	IF(@ID_DANHGIA IS NULL OR @ID_NGUOIDUNG IS NULL OR @ID_NHATRO IS NULL OR @LIKE_DISLIKE IS NULL OR @ND_DANHGIA IS NULL)
	BEGIN
		RAISERROR('VUI LONG NHAP DU THONG TIN', 16, 16)
	END
	ELSE
	BEGIN
		INSERT INTO DANHGIA VALUES (@ID_DANHGIA, @ID_NGUOIDUNG, @ID_NHATRO, @LIKE_DISLIKE, @ND_DANHGIA)
	END
END
SELECT * FROM DANHGIA
EXEC SP_THEM_DANHGIA '20', '101', '17', 0, 'GIA PHONG CAO, DIA CHI KHONG TIEN LOI'

/*2. Truy vấn thông tin*/
/*
____BIN____
-- COT 1
SELECT 'CHO THUE PHONG TRO TAI ' + NHATRO.DIACHI + ' - Q.' + NHATRO.QUAN AS 'DIA CHI NHA TRO' FROM NHATRO 
-- COT 2
SELECT REPLACE((CONVERT(NVARCHAR, NHATRO.DIENTICH)), '.', ',') + ' m2' AS 'DIEN TICH' FROM NHATRO
-- COT 3
SELECT FORMAT( GIAPHONG, '#,##') AS 'GIA PHONG' FROM NHATRO
SELECT REPLACE((FORMAT( GIAPHONG, '#,##')), ',', '.') AS 'GIA PHONG' FROM NHATRO


-- COT 4
SELECT NHATRO.MOTA FROM NHATRO
-- COT 5
SELECT CONVERT(NVARCHAR, NGAY_DANGTIN, 105) FROM NHATRO
-- COT 6
SELECT CASE NGUOIDUNG.GIOITINH
	WHEN 'Nam' THEN 'A. ' + NGUOIDUNG.TEN_NGUOIDUNG
	WHEN 'Nu' THEN 'C. ' + NGUOIDUNG.TEN_NGUOIDUNG
	END AS 'NGUOI LIEN HE'
FROM NGUOIDUNG
-- COT 7
SELECT NGUOIDUNG.DIENTHOAI FROM NGUOIDUNG
-- COT 8
SELECT NGUOIDUNG.DIACHI FROM NGUOIDUNG

-- FULL
SELECT 
'CHO THUE PHONG TRO TAI ' + NHATRO.DIACHI + ' - Q.' + NHATRO.QUAN AS 'DIA CHI NHA TRO',
REPLACE((CONVERT(NVARCHAR, NHATRO.DIENTICH)), '.', ',') + ' m2' AS 'DIEN TICH',
FORMAT( NHATRO.GIAPHONG, '#,##') AS 'GIA PHONG',
NHATRO.MOTA AS 'MO TA',
CONVERT(NVARCHAR, NGAY_DANGTIN, 105) AS 'NGAY DANG TIN',
CASE NGUOIDUNG.GIOITINH
	WHEN 'Nam' THEN 'A. ' + NGUOIDUNG.TEN_NGUOIDUNG
	WHEN 'Nu' THEN 'C. ' + NGUOIDUNG.TEN_NGUOIDUNG
	END AS 'NGUOI LIEN HE',
NGUOIDUNG.DIENTHOAI AS 'DIEN THOAI',
NGUOIDUNG.DIACHI AS 'DIA CHI NGUOI DUNG'
FROM NHATRO INNER JOIN NGUOIDUNG ON NHATRO.ID_NGUOIDUNG = NGUOIDUNG.ID_NGUOIDUNG
*/

ALTER PROC SP_SEARCH_PhongTro
@QUAN NVARCHAR(50) = N'%',
@LOAIHINHTRO NVARCHAR(50) = N'%',
@GIAMIN FLOAT = NULL,
@GIAMAX FLOAT = NULL,
@DIENTICHMIN FLOAT = NULL,
@DIENTICHMAX FLOAT = NULL,
@NGAYDANGTINMIN DATE = NULL,
@NGAYDANGTINMAX DATE = NULL
AS BEGIN
	IF(@DIENTICHMIN IS NULL) SELECT @DIENTICHMIN = MIN(NHATRO.DIENTICH) FROM NHATRO
	IF(@DIENTICHMAX IS NULL) SELECT @DIENTICHMAX = MAX(NHATRO.DIENTICH) FROM NHATRO
	IF(@NGAYDANGTINMIN IS NULL) SELECT @NGAYDANGTINMIN = MIN(NHATRO.NGAY_DANGTIN) FROM NHATRO
	IF(@NGAYDANGTINMAX IS NULL) SELECT @NGAYDANGTINMAX = MAX(NHATRO.NGAY_DANGTIN) FROM NHATRO
	IF(@GIAMIN IS NULL) SELECT @GIAMIN = MIN(NHATRO.GIAPHONG) FROM NHATRO
	IF(@GIAMAX IS NULL) SELECT @GIAMAX = MAX(NHATRO.GIAPHONG) FROM NHATRO
	SELECT 
	'CHO THUE PHONG TRO TAI ' + NHATRO.DIACHI + ' - Q.' + NHATRO.QUAN AS 'DIA CHI NHA TRO',
	REPLACE((CONVERT(NVARCHAR, NHATRO.DIENTICH)), '.', ',') + ' m2' AS 'DIEN TICH',
	REPLACE((FORMAT( GIAPHONG, '#,##')), ',', '.') AS 'GIA PHONG',
	NHATRO.MOTA AS 'MO TA',
	CONVERT(NVARCHAR, NGAY_DANGTIN, 105) AS 'NGAY DANG TIN',
	CASE NGUOIDUNG.GIOITINH
		WHEN 'Nam' THEN 'A. ' + NGUOIDUNG.TEN_NGUOIDUNG
		WHEN 'Nu' THEN 'C. ' + NGUOIDUNG.TEN_NGUOIDUNG
		END AS 'NGUOI LIEN HE',
	NGUOIDUNG.DIENTHOAI AS 'DIEN THOAI',
	NGUOIDUNG.DIACHI AS 'DIA CHI NGUOI DUNG'
	FROM NHATRO INNER JOIN NGUOIDUNG ON NHATRO.ID_NGUOIDUNG = NGUOIDUNG.ID_NGUOIDUNG INNER JOIN LOAINHA ON NHATRO.ID_LOAINHA = LOAINHA.ID_LOAINHA
	WHERE
	NHATRO.QUAN LIKE @QUAN
	AND LOAINHA.TEN_LOAINHA LIKE @LOAIHINHTRO
	AND NHATRO.DIENTICH BETWEEN @DIENTICHMIN AND @DIENTICHMAX
	AND NHATRO.NGAY_DANGTIN BETWEEN @NGAYDANGTINMIN AND @NGAYDANGTINMAX
	AND NHATRO.GIAPHONG BETWEEN @GIAMIN AND @GIAMAX
END
EXEC SP_SEARCH_PhongTro 'BA DINH', N'Nhà riêng', 3000000, 4000000
EXEC SP_SEARCH_PhongTro 'CAU GIAY', N'Căn hộ mini'
EXEC SP_SEARCH_PhongTro 'CAU GIAY', N'Căn hộ chung cư'
EXEC SP_SEARCH_PhongTro 'THANH XUAN'

SELECT * FROM LOAINHA

/*
Viết một hàm có các tham số đầu vào tương ứng với tất cả các cột của bảng
NGUOIDUNG. Hàm này trả về mã người dùng (giá trị của cột khóa chính của bảng
NGUOIDUNG) thỏa mãn các giá trị được truyền vào tham số.
*/
ALTER FUNCTION FN_MaNguoiDung
(
	@TEN_NGUOIDUNG NVARCHAR(255) = N'%',
	@DIENTHOAI NVARCHAR(11) = N'%',
	@QUAN NVARCHAR(50) = N'%',
	@EMAIL NVARCHAR(100) = N'%'
)
RETURNS NCHAR(20)
AS BEGIN
	DECLARE @ID_NGUOIDUNG NCHAR(10);

	IF EXISTS(SELECT * FROM NGUOIDUNG WHERE TEN_NGUOIDUNG LIKE @TEN_NGUOIDUNG AND DIENTHOAI LIKE @DIENTHOAI AND QUAN LIKE @QUAN AND EMAIL LIKE @EMAIL)
	BEGIN
		SELECT @ID_NGUOIDUNG = ID_NGUOIDUNG FROM NGUOIDUNG WHERE TEN_NGUOIDUNG LIKE @TEN_NGUOIDUNG AND DIENTHOAI LIKE @DIENTHOAI AND QUAN LIKE @QUAN AND EMAIL LIKE @EMAIL
		RETURN @ID_NGUOIDUNG
	END
	RETURN 'KHONG TIM THAY'
END
PRINT 'KET QUA: ' + DBO.FN_MaNguoiDung(N'LE THI S', '0912345678', 'CAU GIAY', 'S@GMAIL.COM')

/*
Viết một hàm có tham số đầu vào là mã nhà trọ (cột khóa chính của bảng
NHATRO). Hàm này trả về tổng số LIKE và DISLIKE của nhà trọ này.
*/
ALTER FUNCTION FN_DEM_LIKE_DISLIKE(@ID_NHATRO NCHAR(10), @LIKE_DISLIKE INT)
RETURNS NVARCHAR(250)
AS BEGIN
	DECLARE @RESULT NVARCHAR(10)
	DECLARE @MESSAGE NVARCHAR(100)
	IF NOT EXISTS(SELECT * FROM NHATRO WHERE ID_NHATRO = @ID_NHATRO)
	BEGIN
		RETURN 'KHONG TIM THAY ID NHA TRO ' + @ID_NHATRO
	END

	IF(@LIKE_DISLIKE = 1)--LIKE
	BEGIN
		SELECT @RESULT = CONVERT(NVARCHAR, COUNT(*)) FROM DANHGIA WHERE ID_NHATRO = @ID_NHATRO AND LIKE_DISLIKE = 1
		RETURN @RESULT
	END
	ELSE BEGIN
		IF(@LIKE_DISLIKE = 0)-- DISLIKE
		BEGIN
			SELECT @RESULT = CONVERT(NVARCHAR, COUNT(*)) FROM DANHGIA WHERE ID_NHATRO = @ID_NHATRO AND LIKE_DISLIKE = 0
			RETURN @RESULT
		END
		ELSE
		BEGIN
			RETURN '1: LIKE - 0: DISLIKE'
		END
	END
	RETURN '1: LIKE - 0: DISLIKE'
END
PRINT DBO.FN_DEM_LIKE_DISLIKE('17', 1)
PRINT DBO.FN_DEM_LIKE_DISLIKE('17', 0)
PRINT DBO.FN_DEM_LIKE_DISLIKE('170', 1)
SELECT ID_NHATRO, LIKE_DISLIKE FROM DANHGIA WHERE ID_NHATRO = '17'

/*
Tạo một View lưu thông tin của TOP 10 nhà trọ có số người dùng LIKE nhiều nhất
*/
CREATE VIEW VW_TOP10LIKE
AS
	SELECT DISTINCT TOP 10 DBO.FN_DEM_LIKE_DISLIKE(NHATRO.ID_NHATRO, 1) AS 'LIKE', NHATRO.DIENTICH, NHATRO.GIAPHONG, NHATRO.MOTA, NHATRO.NGAY_DANGTIN, NGUOIDUNG.TEN_NGUOIDUNG, NGUOIDUNG.DIACHI, NGUOIDUNG.DIENTHOAI, NGUOIDUNG.EMAIL
	FROM NHATRO INNER JOIN NGUOIDUNG ON NHATRO.ID_NGUOIDUNG = NGUOIDUNG.ID_NGUOIDUNG INNER JOIN DANHGIA ON DANHGIA.ID_NHATRO = NHATRO.ID_NHATRO
	ORDER BY 'LIKE' DESC
SELECT * FROM VW_TOP10LIKE

/*
Viết một Stored Procedure nhận tham số đầu vào là mã nhà trọ (cột khóa chính của
bảng NHATRO). SP này trả về tập kết quả gồm các thông tin sau:
- Mã nhà trọ
- Tên người đánh giá
- Trạng thái LIKE hay DISLIKE
- Nội dung đánh giá
*/
ALTER PROC SP_DANHGIA @ID_NHATRO NCHAR(10)
AS BEGIN
	IF EXISTS(SELECT * FROM NHATRO WHERE @ID_NHATRO LIKE NHATRO.ID_NHATRO)
	BEGIN
		RAISERROR('KHONG TIM THAY', 16, 16)
	END
	ELSE
	BEGIN
		SELECT NHATRO.ID_NHATRO, NGUOIDUNG.TEN_NGUOIDUNG,
		CASE DANHGIA.LIKE_DISLIKE
			WHEN 1 THEN 'LIKE'
			WHEN 0 THEN 'DISLIKE'
			END AS 'TRANG THAI', 
		DANHGIA.ND_DANHGIA  
		FROM DANHGIA INNER JOIN NGUOIDUNG ON DANHGIA.ID_DANHGIA = NGUOIDUNG.ID_NGUOIDUNG INNER JOIN NHATRO ON NHATRO.ID_NHATRO = DANHGIA.ID_NHATRO
	END
	
END
EXEC SP_DANHGIA '20'

/*3. Xóa thông tin*/
/*
1. Viết một SP nhận một tham số đầu vào kiểu int là số lượng DISLIKE. SP này thực hiện
thao tác xóa thông tin của các nhà trọ và thông tin đánh giá của chúng, nếu tổng số lượng
DISLIKE tương ứng với nhà trọ này lớn hơn giá trị tham số được truyền vào.
Yêu cầu: Sử dụng giao dịch trong thân SP, để đảm bảo tính toàn vẹn dữ liệu khi một thao tác
xóa thực hiện không thành công.
*/
CREATE PROC SP_DEL_DISLIKE @DISLIKE INT
AS
BEGIN TRY
	DECLARE @TBNHATRO TABLE(ID_NHATRO NCHAR(10))
	INSERT INTO @TBNHATRO
	SELECT NHATRO.ID_NHATRO FROM NHATRO WHERE CONVERT(INT, DBO.FN_DEM_LIKE_DISLIKE(ID_NHATRO, 0)) >= @DISLIKE
	BEGIN TRAN
		DELETE FROM DANHGIA WHERE DANHGIA.ID_NHATRO IN (SELECT * FROM @TBNHATRO)
		DELETE FROM NHATRO WHERE NHATRO.ID_NHATRO IN (SELECT * FROM @TBNHATRO)
		PRINT 'XOA THANH CONG'
	COMMIT TRAN
END TRY
BEGIN CATCH
	ROLLBACK TRAN
	RAISERROR('XOA THAT BAI', 16, 16)
END CATCH
EXEC SP_DEL_DISLIKE 4
SELECT NHATRO.ID_NHATRO, DBO.FN_DEM_LIKE_DISLIKE(ID_NHATRO, 0) FROM NHATRO

/*
Viết một SP nhận hai tham số đầu vào là khoảng thời gian đăng tin. SP này thực hiện
thao tác xóa thông tin những nhà trọ được đăng trong khoảng thời gian được truyền vào
qua các tham số.
*/

CREATE PROC SP_DEL_TRONG_KHOANG_NGAY @TU_NGAY DATE , @DEN_NGAY DATE
AS
BEGIN TRY
	DECLARE @TBNHATRO TABLE(ID_NHATRO NCHAR(10))
	INSERT INTO @TBNHATRO
	SELECT ID_NHATRO FROM NHATRO WHERE NHATRO.NGAY_DANGTIN BETWEEN @TU_NGAY	 AND @DEN_NGAY
	BEGIN TRAN
		DELETE FROM DANHGIA WHERE DANHGIA.ID_NHATRO IN (SELECT * FROM @TBNHATRO)
		DELETE FROM NHATRO WHERE NHATRO.ID_NHATRO IN (SELECT * FROM @TBNHATRO)
		PRINT 'XOA THANH CONG'
	COMMIT TRAN
END TRY
BEGIN CATCH
	ROLLBACK TRAN
	RAISERROR('XOA THAT BAI', 16, 16)
END CATCH

EXEC SP_DEL_TRONG_KHOANG_NGAY '2024-05-10', '2025-05-10'
SELECT * FROM NHATRO
SELECT * FROM DANHGIA
INSERT INTO NHATRO(ID_NHATRO, ID_LOAINHA, DIENTICH, GIAPHONG, DIACHI, QUAN, MOTA, NGAY_DANGTIN, ID_NGUOIDUNG) VALUES
('21', '1', 30.0, 3000000.0, 'SỐ 10, DUONG TRAN DUY HUNG, QUAN CAU GIAY', 'CAU GIAY', 'PHONG TRO MOI XAY, THOANG MAT, CO BAN CONG', '2024-05-10', '15'),
('22', '1', 30.0, 3000000.0, 'SỐ 10, DUONG TRAN DUY HUNG, QUAN CAU GIAY', 'CAU GIAY', 'PHONG TRO MOI XAY, THOANG MAT, CO BAN CONG', '2024-06-10', '15'),
('23', '1', 30.0, 3000000.0, 'SỐ 10, DUONG TRAN DUY HUNG, QUAN CAU GIAY', 'CAU GIAY', 'PHONG TRO MOI XAY, THOANG MAT, CO BAN CONG', '2024-07-10', '15'),
('24', '1', 30.0, 3000000.0, 'SỐ 10, DUONG TRAN DUY HUNG, QUAN CAU GIAY', 'CAU GIAY', 'PHONG TRO MOI XAY, THOANG MAT, CO BAN CONG', '2024-08-10', '15')

INSERT INTO DANHGIA (ID_DANHGIA, ID_NGUOIDUNG, ID_NHATRO, LIKE_DISLIKE, ND_DANHGIA) VALUES
('22', '7', '22', 1, 'PHONG RONG RAI, GIA CA PHAI CHANG'),
('21', '7', '21', 1, 'PHONG RONG RAI, GIA CA PHAI CHANG'),
('23', '7', '24', 1, 'PHONG RONG RAI, GIA CA PHAI CHANG'),
('24', '7', '23', 1, 'PHONG RONG RAI, GIA CA PHAI CHANG')
